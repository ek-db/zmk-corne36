/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
};

&lt { tapping-term-ms = <175>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        combo_colon {
            bindings = <&kp COLON>;
            key-positions = <32 33>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R                  &kp T                         &kp Y      &kp U        &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F                  &kp G                         &kp H      &kp J        &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V                  &kp B                         &kp N      &kp M        &kp COMMA  &kp DOT  &kp SQT   &trans
                      &tog 1  &mt LEFT_SHIFT ESCAPE  &mt LEFT_CONTROL BACKSPACE    &kp SPACE  &lt 2 ENTER  &kp TAB
            >;
        };

        number_nav {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3       &kp LA(F4)  &kp F5             &kp ASTERISK  &kp NUMBER_7  &kp N8        &kp N9        &kp PLUS      &trans
&trans  &kp F6   &kp F7   &kp F8       &kp F9      &kp F10            &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &trans
&trans  &kp F11  &kp F12  &bootloader  &sys_reset  &kp PRINTSCREEN    &kp EQUAL     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp QUESTION  &trans
                          &tog 1       &tog 4      &kp BACKSPACE      &kp SPACE     &kp ENTER     &kp N0
            >;
        };

        symbols {
            bindings = <
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5          &kp CARET     &kp AMPERSAND  &kp UP_ARROW          &kp RIGHT_BRACKET      &kp ASTERISK  &trans
&trans  &kp NUMBER_6     &kp N7        &kp N8        &kp N9        &kp NUMBER_0    &kp NUMBER_6  &kp LEFT       &kp DOWN              &kp RIGHT              &kp PIPE      &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp LCTRL     &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
                                       &trans        &trans        &trans          &trans        &trans         &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4     &kp C_VOLUME_UP   &trans          &kp UP_ARROW  &trans           &soft_off    &trans
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4      &kp K_PLAY_PAUSE  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &none        &trans
&trans  &bootloader    &sys_reset     &none          &bt BT_CLR     &bt BT_CLR_ALL    &kp C_VOL_DN      &trans          &trans        &trans           &kp AT_SIGN  &trans
                                      &tog 3         &trans         &trans            &trans            &trans          &trans
            >;
        };

        gamemode {
            bindings = <
&trans  &kp TAB         &kp Q  &kp W   &kp E       &kp R        &kp C_VOLUME_UP   &kp N7           &kp N8        &kp N9        &trans  &trans
&trans  &kp LCTRL       &kp A  &kp S   &kp D       &kp G        &kp C_PLAY_PAUSE  &kp NUMBER_4     &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &kp LEFT_SHIFT  &kp Z  &kp X   &kp C       &kp V        &kp C_VOL_DN      &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                               &tog 4  &kp ESCAPE  &kp SPACE    &trans            &kp PAUSE_BREAK  &tog 4
            >;
        };
    };
};
